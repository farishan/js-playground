function FunctionManager(){this.functionMap={},this.listenersByFunction={},this.register=function(n){this.functionMap[n.key]=n.value,console.log(`function with key: ${n.key} has been registered.`)},this.execute=function(t){const i=this;if(!this.functionMap[t.key])throw Error("unknown function.");this.functionMap[t.key](t.payload),this.listenersByFunction[t.key]&&Object.keys(this.listenersByFunction[t.key]).forEach(n=>{i.listenersByFunction[t.key][n](t.payload)})},this.listen=function(n){if(!this.functionMap[n.functionKey])throw Error("unknown function.");this.listenersByFunction[n.functionKey]||(this.listenersByFunction[n.functionKey]={}),this.listenersByFunction[n.functionKey][n.listenerKey]=n.callback}}export{FunctionManager as default};
