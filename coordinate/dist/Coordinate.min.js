function Coordinate(...a){a=this.adapt(...a);this.x=a[0],this.y=a[1],this.lastX=0,this.lastY=0,this.distance=this.getDistanceFrom()}Coordinate.prototype.getDistanceFrom=function(...a){var b=this.adapt(...a),a=this.x-b[0],b=this.y-b[1];return Math.floor(Math.sqrt(a*a+b*b))},Coordinate.prototype.getXDistanceFrom=function(n=0){return Math.abs(this.x-n)},Coordinate.prototype.getYDistanceFrom=function(n=0){return Math.abs(this.y-n)},Coordinate.prototype.set=function(...a){a=this.adapt(...a);this.lastX=this.x,this.lastY=this.y,this.x=a[0],this.y=a[1],this.resetDistance()},Coordinate.prototype.setX=function(x){x&&(this.lastX=this.x,this.x=x,this.resetDistance())},Coordinate.prototype.setY=function(y){y&&(this.lastY=this.y,this.y=y,this.resetDistance())},Coordinate.prototype.resetDistance=function(){this.distance=this.getDistanceFrom({x:this.lastX,y:this.lastY})},Coordinate.prototype.adapt=function(...args){if(args&&2===args.length)return[args[0],args[1]];if(args&&1===args.length){if(args[0][0]&&args[0][1])return[args[0][0],args[0][1]];if(args[0].x&&args[0].y)return[args[0].x,args[0].y]}return[0,0]};export default Coordinate;