{
  "version": 3,
  "sources": ["../src/Processor.js", "../src/index.js", "main.js"],
  "sourcesContent": ["/* note: processor dont need a logger app */\n\n'use strict';\n\nfunction Processor(options = {}) {\n    const self = this\n\n    this.debug = options.debug || false\n    this.processMap = new Map()\n\n    this.register = function (key, func) {\n        if (this.debug) console.info('registering process...', key, func)\n        this.processMap.set(key, func)\n        if (this.debug) console.info('process registered:', key)\n    }\n\n    this.process = function (key, input, callback) {\n        if (!key) throw Error('Invalid process key.')\n        if (!self.processMap.has(key)) throw Error('Unknown process.')\n\n\n        if (this.debug) console.info('processing...', key)\n\n        if (callback) {\n            self.processMap.get(key)(input, callback)\n        } else {\n            self.processMap.get(key)(input)\n        }\n\n        if (this.debug) console.info('processed.', key)\n    }\n\n    /* Utils */\n    this.setOption = function (key, value) {\n        if (key === 'debug') {\n            this.debug = value || false\n        }\n    }\n\n    return this\n}\n\nexport default Processor", "import Processor from \"./Processor\";\n\nexport default new Processor()", "import processor from \"../src\";\n\nprocessor.setOption('debug', true)\n\nprocessor.register('myprocess', (payload, callback) => {\n    console.log('myprocess invoked.', payload)\n    callback({...payload, processed: true})\n    console.log('myprocess invoked done.', payload)\n})\n\nprocessor.process('myprocess', { hello: 'world' }, (payload) => {\n    console.log('myprocess callback started.')\n    console.log(payload)\n    console.log('myprocess callback is done.')\n})"],
  "mappings": ";;AAIA,WAAS,UAAU,UAAU,CAAC,GAAG;AAC7B,UAAM,OAAO;AAEb,SAAK,QAAQ,QAAQ,SAAS;AAC9B,SAAK,aAAa,oBAAI,IAAI;AAE1B,SAAK,WAAW,SAAU,KAAK,MAAM;AACjC,UAAI,KAAK;AAAO,gBAAQ,KAAK,0BAA0B,KAAK,IAAI;AAChE,WAAK,WAAW,IAAI,KAAK,IAAI;AAC7B,UAAI,KAAK;AAAO,gBAAQ,KAAK,uBAAuB,GAAG;AAAA,IAC3D;AAEA,SAAK,UAAU,SAAU,KAAK,OAAO,UAAU;AAC3C,UAAI,CAAC;AAAK,cAAM,MAAM,sBAAsB;AAC5C,UAAI,CAAC,KAAK,WAAW,IAAI,GAAG;AAAG,cAAM,MAAM,kBAAkB;AAG7D,UAAI,KAAK;AAAO,gBAAQ,KAAK,iBAAiB,GAAG;AAEjD,UAAI,UAAU;AACV,aAAK,WAAW,IAAI,GAAG,EAAE,OAAO,QAAQ;AAAA,MAC5C,OAAO;AACH,aAAK,WAAW,IAAI,GAAG,EAAE,KAAK;AAAA,MAClC;AAEA,UAAI,KAAK;AAAO,gBAAQ,KAAK,cAAc,GAAG;AAAA,IAClD;AAGA,SAAK,YAAY,SAAU,KAAK,OAAO;AACnC,UAAI,QAAQ,SAAS;AACjB,aAAK,QAAQ,SAAS;AAAA,MAC1B;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,MAAO,oBAAQ;;;ACxCf,MAAO,cAAQ,IAAI,kBAAU;;;ACA7B,cAAU,UAAU,SAAS,IAAI;AAEjC,cAAU,SAAS,aAAa,CAAC,SAAS,aAAa;AACnD,YAAQ,IAAI,sBAAsB,OAAO;AACzC,aAAS,EAAC,GAAG,SAAS,WAAW,KAAI,CAAC;AACtC,YAAQ,IAAI,2BAA2B,OAAO;AAAA,EAClD,CAAC;AAED,cAAU,QAAQ,aAAa,EAAE,OAAO,QAAQ,GAAG,CAAC,YAAY;AAC5D,YAAQ,IAAI,6BAA6B;AACzC,YAAQ,IAAI,OAAO;AACnB,YAAQ,IAAI,6BAA6B;AAAA,EAC7C,CAAC;",
  "names": []
}
